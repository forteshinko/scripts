#lang racket

(let fac ([n 10])
  (if (zero? n)
      1
      (* n (fac (sub1 n)))))

(let ([x 5])
  (let ([x 2]
        [y x])
    (list y x)))

(let* ([x 1]
       [y (+ x 1)])
  (list y x))

(letrec ([is-even? (lambda (n)
                     (or (zero? n)
                         (is-odd? (sub1 n))))]
         [is-odd? (lambda (n)
                    (and (not (zero? n))
                         (is-even? (sub1 n))))])
  (is-odd? 11))